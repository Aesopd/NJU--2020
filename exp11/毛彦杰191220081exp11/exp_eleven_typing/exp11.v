
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module exp11(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// VGA //////////
	output		          		VGA_BLANK_N,
	output		     [7:0]		VGA_B,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS,

	//////////// PS2 //////////
	inout 		          		PS2_CLK,
	inout 		          		PS2_CLK2,
	inout 		          		PS2_DAT,
	inout 		          		PS2_DAT2
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
wire [23:0] vga_data;
wire [9:0] h_addr;
wire [9:0] v_addr;
//module use_kb(clk, ps2_clk, ps2_data);
//use_kb ukb(CLOCK_50, PS2_CLK, PS2_DAT, HEX5, HEX4, HEX3, HEX2, HEX1, HEX0, LEDR[9]);
//roms(clk, ps2_clk, ps2_data, HEX5, HEX4, HEX3, HEX2, HEX1, HEX0, LEDR, vga_clk, VGA_HS, VGA_VS, VGA_BLANK_N, VGA_R, VGA_G, VGA_B);
roms r(VGA_BLANK_N, CLOCK_50, PS2_CLK, PS2_DAT, HEX5, HEX4, HEX3, HEX2, HEX1, HEX0,
LEDR[9], VGA_CLK, vga_data,h_addr, v_addr);

clkgen #(25000000) my_vgaclk  (CLOCK_50, 1'b0, 1'b1, VGA_CLK);

vga_ctrl myvga(
VGA_CLK, 
1'b0, 
vga_data, 
h_addr, 
v_addr, 
VGA_HS, 
VGA_VS, 
VGA_BLANK_N, 
VGA_R, 
VGA_G,
VGA_B
);

//module use_vga(clk, VGA_CLK, VGA_HS, VGA_VS, VGA_BLANK_N, VGA_R, VGA_G, VGA_B);
//use_vga uvga(CLOCK_50, VGA_CLK, VGA_HS, VGA_VS, VGA_BLANK_N, VGA_R, VGA_G, VGA_B);

//=======================================================
//  Structural coding
//=======================================================

assign VGA_SYNC_N = 0;

endmodule
